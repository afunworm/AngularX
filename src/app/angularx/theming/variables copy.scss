@import '~@angular/material/theming';
@include mat-core();

//Define palettes
//mat-palette(color, default, lighter, darker)
$primary:          mat-palette($mat-blue-gray, 900);
$accent:           mat-palette($mat-blue, 700, 400, 900);
$warn:             mat-palette($mat-red, 500, 200, 800);

//Create the theme
$theme: mat-dark-theme($primary, $accent, $warn);

//Configure background
$background-color: map_get($mat-blue-gray, 900);
$background: map-get($theme, background);
$background: map_merge($background, (background: $background-color));
$theme: map_merge($theme, (background: $background));

//Dialog background - overwritten from _theming.scss
@mixin mat-dialog-theme($theme) {
    $background: map-get($theme, background);
    $foreground: map-get($theme, foreground);
  
    .mat-dialog-container {
      @include _mat-theme-elevation(24, $theme);
      background: mat-color($primary);
      color: mat-color($foreground, text);
    }
}

//Card background - overwritten from _theming.scss
@mixin mat-card-theme($theme) {
    $background: map-get($theme, background);
    $foreground: map-get($theme, foreground);
  
    .mat-card {
      @include _mat-theme-overridable-elevation(1, $theme);
      background: mat-color($primary, darker);
      color: mat-color($foreground, text);
  
      // Needs extra specificity to be able to override the elevation selectors.
      &.mat-card-flat {
        @include _mat-theme-overridable-elevation(0, $theme);
      }
    }
  
    .mat-card-subtitle {
      color: mat-color($foreground, secondary-text);
    }
}

//Mat-menu panel - overwritten from _theming.scss
@mixin mat-menu-theme($theme) {
    $background: map-get($theme, background);
    $foreground: map-get($theme, foreground);
  
    .mat-menu-panel {
      @include _mat-theme-overridable-elevation(4, $theme);
      background: mat-color($primary);
    }
  
    .mat-menu-item {
      background: transparent;
      color: mat-color($foreground, 'text');
  
      &[disabled] {
        &, &::after {
          color: mat-color($foreground, 'disabled');
        }
      }
    }
  
    .mat-menu-item .mat-icon-no-color,
    .mat-menu-item-submenu-trigger::after {
      color: mat-color($foreground, 'icon');
    }
  
    .mat-menu-item:hover,
    .mat-menu-item.cdk-program-focused,
    .mat-menu-item.cdk-keyboard-focused,
    .mat-menu-item-highlighted {
      &:not([disabled]) {
        background: mat-color($background, 'hover');
      }
    }
}

//mat-select
@mixin mat-select-theme($theme) {
  $foreground: map-get($theme, foreground);
  $background: map-get($theme, background);
  $primary: map-get($theme, primary);
  $accent: map-get($theme, accent);
  $warn: map-get($theme, warn);

  .mat-select-value {
    color: mat-color($foreground, text);
  }

  .mat-select-placeholder {
    color: _mat-control-placeholder-color($theme);
  }

  .mat-select-disabled .mat-select-value {
    color: mat-color($foreground, disabled-text);
  }

  .mat-select-arrow {
    color: mat-color($foreground, secondary-text);
  }

  .mat-select-panel {
    background: mat-color($primary);
    @include _mat-theme-overridable-elevation(4, $theme);

    .mat-option.mat-selected:not(.mat-option-multiple) {
      background: mat-color($background, hover, 0.12);
    }
  }

  .mat-form-field {
    &.mat-focused {
      &.mat-primary .mat-select-arrow {
        color: mat-color($primary, text);
      }

      &.mat-accent .mat-select-arrow {
        color: mat-color($accent, text);
      }

      &.mat-warn .mat-select-arrow {
        color: mat-color($warn, text);
      }
    }

    .mat-select.mat-select-invalid .mat-select-arrow {
      color: mat-color($warn, text);
    }

    .mat-select.mat-select-disabled .mat-select-arrow {
      color: mat-color($foreground, disabled-text);
    }
  }
}

@include angular-material-theme($theme);